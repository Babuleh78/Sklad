using System.Collections;
using System.Collections.Generic;
using UnityEngine;

using UnityEngine.Rendering;
using System.Threading;
using TMPro;
using UnityEngine.UI;

public class MasterOfHohol : MonoBehaviour
{
    
    public GameObject bullet;
    public GameObject sniperbullet;
    public GameObject triplebullet;
   
    public static int open_picture;
    
    public Vector2 spawnPos = new Vector2(0, 10);
    private Vector3 hMoveDistance = new Vector3(0.05f, 0, 0);
    private Vector3 vMoveDistance = new Vector3(0, 0.3f, 0);
    private Vector3 motherSpawn = new Vector3(5.5f, 4.5f, 0);
    public GameObject mother;
    private const float MAX_LEFT = -5.2f;
    private const float MAX_RIGHT = 5.2f;
    public float MAX_SPEED = 0.05f;
    private bool moveR;
    public float moveTimer = 0.01f;
    public float moveTime = 0.005f;
    public float START_Y = -1.15f;
    private float motherTimer = 1f;
    private const float MOTHER_MIN = 15;
    private const float MOTHER_MAX = 30;
    private bool entering = true;
    public float ShootTimer = 0.5f;
    public float ShootTime = 1f;
    
    public static List<GameObject> allHohols = new List<GameObject>();
    private static MasterOfHohol instance;
    void Start()
    {
        
        foreach(GameObject go in GameObject.FindGameObjectsWithTag("Hohol"))
            allHohols.Add(go);

       
        

    }

    // Update is called once per frame
    void Update()
    {
        
        if (entering)
        {
            transform.Translate(Vector2.down * Time.deltaTime * 10);
            if (transform.position.y <= START_Y)
            {
                entering = false;
            }
        }
        else
        {
            GameManager.instance.PlayerCanMove = true;
            if (moveTimer <= 0)
            {
                MoveEnemy();
            }
            if (ShootTimer <= 0)
            {
                Shoot();
            }
            if (motherTimer <= 0)
            {
                SpawnMother();
            }
            moveTimer -= Time.deltaTime;
            ShootTimer -= Time.deltaTime;
            motherTimer -= Time.deltaTime;
            
        }
    }
    
    private void SpawnMother()
    {
        if (mother != null)
        {
            Instantiate(mother, motherSpawn, Quaternion.identity);
            motherTimer = Random.Range(MOTHER_MIN, MOTHER_MAX);
        }
    }
    private void MoveEnemy()
    {
        if (allHohols.Count > 0)
        {
            
            int hitMax = 0;
            for (int i = 0; i < allHohols.Count; i++)
            {
                if (moveR)
                {
                    allHohols[i].transform.position += hMoveDistance;
                }
                else
                {
                    allHohols[i].transform.position -= hMoveDistance;
                }
                if (allHohols[i].transform.position.x > MAX_RIGHT || allHohols[i].transform.position.x < MAX_LEFT)
                {
                    
                    hitMax++;
                }
            }
            if (hitMax > 0)
            {
                for(int i = 0; i < allHohols.Count; i++)
                {
                    allHohols[i].transform.position -= vMoveDistance;
                }
                moveR = !moveR;
            }

            moveTimer = GetMoveSpeed();
        }
    }

    private void Shoot()
    {
        
        int rand = Random.Range(0, allHohols.Count);
       
        GameObject CurrHohol = allHohols[rand];
        Vector2 pos = CurrHohol.transform.position;
        if (CurrHohol.GetComponent<Hohol>().BulletName == "def")
        {
            Instantiate(bullet, pos, Quaternion.identity);
        }
        else if(CurrHohol.GetComponent<Hohol>().BulletName == "sni")
        {
            Instantiate(sniperbullet, pos, Quaternion.identity);
        } else if(CurrHohol.GetComponent<Hohol>().BulletName == "tri")
        {
            Instantiate(triplebullet, pos, Quaternion.identity);

        } else if(CurrHohol.GetComponent<Hohol>().BulletName== "pul" && moveR) 
        {
            Instantiate(bullet, pos, Quaternion.identity);

        } else if(CurrHohol.GetComponent<Hohol>().BulletName == "heal")
        {
            foreach (GameObject go in GameObject.FindGameObjectsWithTag("Hohol"))
                go.GetComponent<Hohol>().health += 1;

            
            
        } else if(CurrHohol.GetComponent<Hohol>().BulletName == "shi")
        {

        }
        else
        {
            
            
        } 
       
        ShootTimer = ShootTime;
    }
    
    private float GetMoveSpeed()
    {
        float f = allHohols.Count * moveTime;
        
        if (f < MAX_SPEED)
        {
            return MAX_SPEED;
        }
        return f;
    }

    
}
