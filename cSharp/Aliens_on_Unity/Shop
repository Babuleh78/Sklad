using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using TMPro;
public class NewBehaviourScript : MonoBehaviour
{

    public Button healthbut;
    public Button shootbut;
    public Button shieldbut;
    public Button speedbut;
    public Button lifebut;
    public Button MaxHelthbut;
    private Color32 active = new Color(1, 1, 1, 1);
    private Color32 inactive = new Color(1, 1, 1, 0.2f);
    public TextMeshProUGUI curGold;
    public TextMeshProUGUI hcost;
    public TextMeshProUGUI shocost;
    public TextMeshProUGUI shicost;
    public TextMeshProUGUI spcost;
    public TextMeshProUGUI lcost;
    public TextMeshProUGUI mlcost;

    private int starthcost = 2;
    private int startshocost = 3;
    private int startshicost = 4;
    private int startspcost = 5;
    private int startlcost = 7;
    private int startmlcost = 10;
    private Player player;

    void Start()
    {
        player = GameObject.FindGameObjectWithTag("Player").GetComponent<Player>();
        UpdUiAndText();
        //player = GameObject.FindGameObjectWithTag("Player").GetComponent<Player>();
        curGold.text = Inventory.currentCoins + "P";
        
    }

    public void BuyHealth()
    {
        if (PriceCheck(starthcost) && player.ShipStats.CurrentHealth < player.ShipStats.maxHealth)
        {
            Inventory.currentCoins -= starthcost;
            curGold.text = Inventory.currentCoins + "P";
            starthcost += 1;
         
            player.ShipStats.CurrentHealth = player.ShipStats.maxHealth;
            
            UIManager.UpdHelth(player.ShipStats.CurrentHealth);
            SaveManager.SaveProg();
            UpdUiAndText();
            
        }
        

    }
    public void BuyShoot()
    {
        if (PriceCheck(startshocost) && player.ShipStats.fireRate > 0.2)
        {
            Inventory.currentCoins -= startshocost;
            curGold.text = Inventory.currentCoins + "P";
            startshocost += 1;
            player.ShipStats.fireRate -= 0.05f;
            SaveManager.SaveProg();
            UpdUiAndText();

        }
       
    }
    public void BuyShield()
    {
        if (PriceCheck(startshicost))
        {
            Inventory.currentCoins -= starthcost;
            curGold.text = Inventory.currentCoins + "P";
            GameManager.SpawnNewShields();
            SaveManager.SaveProg();
            UpdUiAndText();

        }
       
    }
    public void BuySpeed()
    {
        if (PriceCheck(starthcost) && player.ShipStats.speed <12)
        {
            Inventory.currentCoins -= starthcost;
            curGold.text = Inventory.currentCoins + "P";
            startspcost += 1;
            player.ShipStats.speed += 0.25f;
            SaveManager.SaveProg();
            UpdUiAndText();

        }
      
    }
    public void BuyLive()
    {
        if (PriceCheck(starthcost) && player.ShipStats.currentLives <3)
        {
            Inventory.currentCoins -= starthcost;
            curGold.text = Inventory.currentCoins + "P";
            startlcost += 2;
            player.ShipStats.currentLives += 1;
            SaveManager.SaveProg();
            UpdUiAndText();

        }
        
    }
    public void BuyML()
    {
        if (PriceCheck(starthcost) && player.ShipStats.maxHealth < 5)
        {
            Inventory.currentCoins -= starthcost;
            curGold.text = Inventory.currentCoins + "P";
            startmlcost += 10;
            player.ShipStats.maxHealth += 1;
            SaveManager.SaveProg();

            UpdUiAndText();
        }
        else
        {

        }
    }


    private bool PriceCheck(int cost)
    {
        if (cost <= Inventory.currentCoins)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    public void UpdUiAndText()

    {
        curGold.text = Inventory.currentCoins + "P";
        if (player.ShipStats.CurrentHealth == player.ShipStats.maxHealth || !PriceCheck(starthcost))
        {
            healthbut.image.color = inactive;
        }
        else
        {
            healthbut.image.color = active;
        }
        hcost.text = starthcost + "P";
        if (!PriceCheck(startshocost))
        {
            shootbut.image.color = inactive;
        }
        else
        {
            shootbut.image.color = active;
        }
        if(player.ShipStats.fireRate == 0.2)
        {

            shocost.text = "MAX";
        }
        else
        {
            shocost.text = startshocost + "P";
        }
        if (!PriceCheck(startshicost))
        {
            shieldbut.image.color = inactive;
        }
        else
        {
            shieldbut.image.color = active;
        }
        shicost.text = startshicost + "P";
        if (!PriceCheck(startspcost))
        {
            speedbut.image.color = inactive;
        }
        else
        {
            speedbut.image.color = active;
        }
        if(player.ShipStats.speed >= 12)
        {
            spcost.text = "MAX";
        }
        else
        {
            spcost.text = startspcost + "P";
        }
        if (!PriceCheck(startlcost))
        {
            lifebut.image.color = inactive;
        }
        else
        {
            lifebut.image.color = active;
        }
        if(player.ShipStats.currentLives == 3)
        {
            lifebut.image.color = inactive;
        }
        lcost.text = startlcost + "P";
        if (!PriceCheck(startmlcost))
        {
            MaxHelthbut.image.color = inactive;
        }
        else
        {
            MaxHelthbut.image.color = active;
        }
        if (player.ShipStats.maxHealth == 5)
        {
            mlcost.text = "MAX";
        }
        else
        {
            mlcost.text = startmlcost + "P";
        }
       
        
    }
    public void CheatMoney()
    {
        Inventory.currentCoins = 999;
        UpdUiAndText();
    }
}
