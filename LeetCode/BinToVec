/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if(root == nullptr){
            return ans;
        }
        ans.push_back({root->val});
        Helper(root, ans, 1);
        ans.pop_back();
        return ans;
    }
    void Helper(TreeNode*node, vector<vector<int>>& vec, int n){
        if(node == nullptr){
            return;
        }
        if (n >= vec.size()) {
            vec.push_back({});
        }
        if(node->left!=nullptr){
            vec[n].push_back(node->left->val);
            Helper(node->left, vec, n+1);
        }
        if(node->right!=nullptr){
            vec[n].push_back(node->right->val);
            Helper(node->right, vec, n+1);
        }
    }
};
