/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumNumbers(TreeNode* root) {
        if(root == nullptr){
            return 0;
        }
        vector<string> vec;
        int sum = 0;
        Helper(root, "", vec);
        for(string a : vec){
            sum += stoi(a);
        }

        return sum;
    }
    void Helper(TreeNode* node, string s, vector<string>& vec){
        if(node == nullptr){
            
            return;
        }
        if (node->left == nullptr && node->right == nullptr) {
            s += to_string(node->val);
            vec.push_back(s);
            return;
        }
        s += to_string(node->val);
        Helper(node->left, s, vec);
        Helper(node->right, s, vec);
    }
};
