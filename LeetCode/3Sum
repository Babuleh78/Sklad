//bad
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> vec;
        vector<int> mas{0, 0, 0};
        
        for(int k = nums.size()-1; k>=2; k--){
            for(int i = 0; i <= nums.size()- 3 ; i++){
                for(int j = i+1; j <k ; j++){
                    if(nums[i]+nums[j]+nums[k] == 0){
                        mas[0] = nums[i];
                        mas[1] = nums[j];
                        mas[2] = nums[k];
                        sort(mas.begin(), mas.end());
                        bool flag = true;
                        for(int p = 0; p<vec.size(); p++){
                            if(vec[p] == mas){
                                flag = false;
                                break;
                            }
                        }
                        if(flag){
                            vec.push_back(mas);
                        }
                        
                    }
                }
            }
        }
        return vec;
   }
};
//top
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        sort(nums.begin(), nums.end());

        for (int i = 0; i < nums.size(); i++) {
            if (i > 0 && nums[i] == nums[i-1]) {
                continue;
            }
            
            int j = i + 1;
            int k = nums.size() - 1;

            while (j < k) {
                int total = nums[i] + nums[j] + nums[k];

                if (total > 0) {
                    k--;
                } else if (total < 0) {
                    j++;
                } else {
                    res.push_back({nums[i], nums[j], nums[k]});
                    j++;

                    while (nums[j] == nums[j-1] && j < k) {
                        j++;
                    }
                }
            }
        }
        return res;
        }
        return vec;
   }
};
