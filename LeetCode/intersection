class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
         vector<int> vec;
        if(nums1.size() * nums2.size() == 0){
            return vec;
        }
        unordered_map<int, int> first;
        unordered_map<int, int> second;
        for(int i = 0; i<nums1.size(); i++){
            first[nums1[i]] = 1;
        }
        for(int i = 0; i<nums2.size(); i++){
            second[nums2[i]] =1;
        }
        if(nums1.size() > nums2.size()){
            for(int i = 0; i<nums2.size(); i++){
                if(first[nums2[i]]!=0){
                    first[nums2[i]]-=1;
                    vec.push_back(nums2[i]);
                }
            }
        } else{
            for(int i = 0; i<nums1.size(); i++){
                if(second[nums1[i]]!=0){
                    second[nums1[i]] -=1;
                    vec.push_back(nums1[i]);
                }
            }
        }
        return vec;
    }
};
