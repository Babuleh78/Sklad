class Solution {
public:
    int maxArea(vector<int>& h) {
         int l = 0;
        int right = h.size() - 1;
        int left = 0;
        if(h.size() ==2){
            return min(h[0], h[1]);
        }
        while (left != h.size() - 2) {
            if (h[right] >= h[left]) {
            l = max(l, (right - left) * h[left]);
            left++;
            right = h.size() - 1;
            }
             else {
                l = max(l, (right - left) * h[right]);
                right--;
             }
        }
        return l;
    }
};
class Solution {
public:
    int maxArea(vector<int>& h) {
         int l = 0;
        int right = h.size() - 1;
        int left = 0;      
        while (left<right) {
            l = max(l, (right - left) * min(h[left], h[right]));
            if (h[right] > h[left]) {          
             left++;          
            }
             else {               
                right--;
             }

        }
        return l;
    }
};
